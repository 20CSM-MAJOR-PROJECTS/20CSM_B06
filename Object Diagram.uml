1. User Authentication and Account Management:

@startuml
!define OBJECT object

OBJECT user1 {
  userId = 1
  firstName = "John"
  lastName = "Doe"
  email = "john.doe@example.com"
  phoneNumber = "123-456-7890"
  username = "johnDoe"
  password = "encryptedPassword"
  profilePicture = "imagePath"
  authenticated = true
  registrationDate = "2023-09-28"
}

OBJECT admin1 {
  adminId = 1
  adminName = "Admin User"
}

OBJECT isroUser1 {
  isroUserId = 2
  isroUserRole = "Video Classifier"
}

OBJECT generalUser1 {
  generalUserId = 3
}

OBJECT notification1 {
  notificationID = 1
  message = "Welcome to the System!"
  users = "user1"
}

INTERFACE IAuthentication {
  register()
  login()
  logout()
}

INTERFACE INotificationManagement {
  sendNotification()
}

user1 --|> admin1: Inheritance
user1 --|> isroUser1: Inheritance
user1 --|> generalUser1: Inheritance
user1 --|> IAuthentication: realizes
notification1 ..> INotificationManagement: includes
user1 --> notification1: Receives
@enduml

2. Video Upload and Management


@startuml
!define OBJECT object

OBJECT isroUser1 {
  isroUserId: 101
  isroUserRole: "Uploader"
}

OBJECT database1 {
  users: [isroUser1]
  videos: [video1]
  dataSynchronized: true
}

OBJECT video1 {
  videoId: 1001
  title: "Mars Mission"
  description: "Documentary on Mars Mission"
  genre: "Documentary"
  filePath: "/videos/mars_mission.mp4"
}

OBJECT iVideoManagement1 {
  uploadVideo: "Called"
  editMetadata: "Not Called"
  deleteVideo: "Not Called"
}

OBJECT iDataManagement1 {
  synchronizeData: "Synchronized"
}

isroUser1 --> iVideoManagement1: realizes
database1 --> iDataManagement1: includes
isroUser1 --> video1: uploads
video1 --> database1: storedIn
@enduml


3. Video Classification

@startuml
!define OBJECT object

OBJECT isroUser1 {
  isroUserId: 101
  isroUserRole: "Classifier"
}

OBJECT video1 {
  videoId: 1001
  title: "Mars Mission"
  description: "Documentary on Mars Mission"
  genre: genre1
  filePath: "/videos/mars_mission.mp4"
  metadata: metadata1
}

OBJECT genre1 {
  genreId: 1
  name: "Documentary"
}

OBJECT metadata1 {
  title: "Mars Mission"
  description: "A detailed documentary on Mars Mission by ISRO"
  timestamps: "00:00:00"
  duration: 3600
  tags: ["Mars", "Mission", "ISRO"]
  keywords: ["Space", "Exploration", "Mars"]
}

OBJECT videoClassification1 {
  classificationId: 1
  video: video1
  userId: 101
  selectedGenre: genre1
}

OBJECT database1 {
  users: [isroUser1]
  videos: [video1]
}

OBJECT iDataManagement1 {
  synchronizeData: "Synchronized"
}

isroUser1 --> videoClassification1: creates
videoClassification1 --> video1: classifies
video1 --> genre1: belongs to
video1 --> metadata1: contains
database1 --> iDataManagement1: includes
isroUser1 --> database1: uses
video1 --> database1: storedIn
@enduml


4. Video Search


@startuml
!define OBJECT object

OBJECT isroUser1 {
  isroUserId: 101
  isroUserRole: "Searcher"
  searchVideo(): "Mars Mission"
  viewStats(): "Viewed"
  shareVideo(): "Shared"
}

OBJECT generalUser1 {
  generalUserId: 201
  searchVideo(): "Mars Mission"
  viewVideoContent(): "Viewed"
}

OBJECT iVideoManagement1 {
  uploadVideo: "Uploaded"
  editMetadata: "Edited"
  deleteVideo: "Not Deleted"
}

OBJECT video1 {
  videoId: 1001
  title: "Mars Mission"
  description: "Documentary on Mars Mission"
  genre: "Documentary"
  filePath: "/videos/mars_mission.mp4"
  play(): "Played"
}

OBJECT database1 {
  users: [isroUser1, generalUser1]
  videos: [video1]
  getUserById(): "Retrieved"
  getVideoById(): "Retrieved"
}

isroUser1 --> iVideoManagement1: realizes
generalUser1 --> database1: uses
isroUser1 --> database1: uses
video1 --> database1: storedIn
@enduml


5. Video Statistics and Dashboard


@startuml
!define OBJECT object

OBJECT user1 {
  userId: 1
  firstName: "John"
  lastName: "Doe"
  email: "john.doe@example.com"
  phoneNumber: "123-456-7890"
  username: "johndoe"
  password: "password"
  profilePicture: "image.jpg"
  authenticated: true
  registrationDate: "2023-09-29"
}

OBJECT isroUser1 {
  isroUserId: 101
  isroUserRole: "Uploader"
  classifyVideo(): "Educational"
  searchVideo(): "Mars Mission"
  viewStats(): "Viewed"
  shareVideo(): "Shared"
}

OBJECT dashboard1 {
  userId: 1
  viewUploadedVideos(): "Mars Mission, Moon Mission"
  viewClassifiedVideos(): "Educational, Documentary"
  viewStats(): "Views: 1000, Genre Distribution: 50% Educational, 50% Documentary"
}

OBJECT database1 {
  users: [user1, isroUser1]
  videos: ["Mars Mission", "Moon Mission"]
  addUser(): true
  getUserById(): "Retrieved user1"
  addVideo(): true
  getVideoById(): "Retrieved Mars Mission"
  updateUser(): true
  updateVideo(): true
}

OBJECT iDataManagement1 {
  synchronizeData(): true
}

user1 --> isroUser1: Inheritance {leaf}
user1 --> dashboard1: Views
isroUser1 --> database1: Uses
dashboard1 --> database1: Uses
database1 --> iDataManagement1: includes
@enduml



6.  User Roles and Permissions


@startuml
!define OBJECT object

OBJECT user1 {
  userId: 1
  firstName: "John"
  lastName: "Doe"
  email: "john.doe@example.com"
  phoneNumber: "123-456-7890"
  username: "johndoe"
  password: "password"
  profilePicture: "image.jpg"
  authenticated: true
  registrationDate: "2023-09-29"
}

OBJECT iAuthentication1 {
  register(): true
  login(): true
  logout(): true
}

OBJECT admin1 {
  adminId: 101
  adminName: "Admin John"
  viewUserStats(): "Total Users: 100, Active: 80, Inactive: 20"
}

OBJECT isroUser1 {
  isroUserId: 102
  isroUserRole: "Uploader"
  classifyVideo(): "Educational"
  searchVideo(): "Mars Mission"
  viewStats(): "Viewed"
  shareVideo(): "Shared"
}

OBJECT generalUser1 {
  generalUserId: 103
  searchVideo(): "Moon Mission"
  viewVideoContent(): "Viewed Moon Mission"
}

OBJECT notification1 {
  notificationID: 1
  message: "New Video Uploaded: Mars Mission"
  users: [user1, admin1, isroUser1, generalUser1]
}

OBJECT iNotificationManagement1 {
  sendNotification(): true
}

user1 --> iAuthentication1: realizes
user1 --|> admin1: Inheritance {leaf}
user1 --|> isroUser1: Inheritance {leaf}
user1 --|> generalUser1: Inheritance {leaf}
user1 --> notification1: Receives
admin1 --> iNotificationManagement1: realizes
@enduml


7. Video Sharing and Collaboration


@startuml
!define OBJECT object

OBJECT isroUser1 {
  isroUserId: 102
  isroUserRole: "Uploader"
  classifyVideo(): "Educational"
  searchVideo(): "Mars Mission"
  viewStats(): "Viewed"
  shareVideo(): "Shared"
}

OBJECT video1 {
  videoId: 201
  title: "Mars Mission"
  description: "Documentary on Mars Mission"
  genre: "Educational"
  filePath: "/videos/mars_mission.mp4"
  metadata: "Title: Mars Mission, Description: Documentary on Mars Mission, Duration: 120 min, Tags: [Mars, Mission, Space], Keywords: [Mars, Space, Exploration]"
  play(): "Playing Mars Mission"
}

OBJECT iVideoManagement1 {
  uploadVideo(): "Video Uploaded"
  editMetadata(): "Metadata Edited"
  deleteVideo(): "Video Deleted"
}

OBJECT database1 {
  addUser(): true
  getUserById(): "Retrieved User by ID"
  addVideo(): true
  getVideoById(): "Retrieved Video by ID"
  updateUser(): true
  updateVideo(): true
}

isroUser1 --> iVideoManagement1: realizes
isroUser1 --> video1: Uploads
video1 --> database1: Uses
@enduml


8. Video Playback and Streaming

@startuml
!define OBJECT object

OBJECT isroUser1 {
  isroUserId: 102
  isroUserRole: "Viewer"
  classifyVideo(): "Educational"
  searchVideo(): "Mars Mission"
  viewStats(): "Viewed"
  shareVideo(): "Shared"
}

OBJECT generalUser1 {
  generalUserId: 203
  searchVideo(): "Mars Mission"
  viewVideoContent(): "Viewing Mars Mission"
}

OBJECT video1 {
  videoId: 201
  title: "Mars Mission"
  description: "Documentary on Mars Mission"
  genre: "Educational"
  filePath: "/videos/mars_mission.mp4"
  metadata: "Title: Mars Mission, Description: Documentary on Mars Mission, Duration: 120 min, Tags: [Mars, Mission, Space], Keywords: [Mars, Space, Exploration]"
  play(): "Playing Mars Mission"
}

OBJECT database1 {
  addUser(): true
  getUserById(): "Retrieved User by ID"
  addVideo(): true
  getVideoById(): "Retrieved Video by ID"
  updateUser(): true
  updateVideo(): true
}

isroUser1 --> video1: Views
generalUser1 --> video1: Views
video1 --> database1: Uses
@enduml
